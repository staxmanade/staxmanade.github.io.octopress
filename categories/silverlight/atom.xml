<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Silverlight | Developing on Staxmanade]]></title>
  <link href="http://staxmanade.com/categories/silverlight/atom.xml" rel="self"/>
  <link href="http://staxmanade.com/"/>
  <updated>2014-04-18T15:22:52-07:00</updated>
  <id>http://staxmanade.com/</id>
  <author>
    <name><![CDATA[Jason Jarrett]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Silverlight – DataBind to an Anonymous Type (Who Knew?)]]></title>
    <link href="http://staxmanade.com/2010/05/silverlight-databind-to-anonymous-type/"/>
    <updated>2010-05-22T19:36:00-07:00</updated>
    <id>http://staxmanade.com/2010/05/silverlight-databind-to-anonymous-type</id>
    <content type="html"><![CDATA[<div class='post'>
<p>I searched the web for the idea first. I was certain somebody had blogged about this before, and just wanted to quickly confirm it’s truth. Unfortunately all I came across were work-a-rounds and people telling you it’s not possible. So hopefully this post will help the next guy.</p>  <p>Since anonymous types are generated in an assembly as <a href="http://msdn.microsoft.com/en-us/library/7c5ka91b(VS.80).aspx">internal</a> types, by default, if you try to DataBind to an anonymous type, you’ll probably receive a binding error much like the following.</p>  <pre>System.Windows.Data Error: <br />    Cannot get 'Age' value (type 'System.Int32') from '{ Name = World, Age = 23 }' (type '&lt;&gt;f__AnonymousType0`2[System.String,System.Int32]'). <br />    BindingExpression: Path='Age' DataItem='{ Name = World, Age = 23 }' (HashCode=-172495608);<br />    target element is 'System.Windows.Controls.TextBlock' (Name=''); <br />    target property is 'Text' (type 'System.String').. <br />    System.MethodAccessException: Attempt by method 'System.Windows.CLRPropertyListener.get_Value()' <br />    to access method '&lt;&gt;f__AnonymousType0`2&lt;System.__Canon,System.Int32&gt;.get_Age()' failed.<br /><br />   at System.RuntimeMethodHandle.PerformSecurityCheck(Object obj,...<br />   at System.RuntimeMethodHandle.PerformSecurityCheck(Object obj,...<br />   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, Bind...<br />   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, Bind...<br />   at System.Reflection.RuntimePropertyInfo.GetValue(Object obj, ...<br />   at System.Reflection.RuntimePropertyInfo.GetValue(Object obj, ...<br />   at System.Windows.CLRPropertyListener.get_Value()<br />   at System.Windows.PropertyAccessPathStep.ConnectToPropertyInSo...</pre><br /><br /><h4>Turns out, it _IS_ possible to DataBind to an anonymous type in Silverlight.</h4><br /><br /><p>All you have to do is expose your privates. Placing the following into your AssemblyInfo.cs will give the built in bindings the ability DataBind to your object(s).</p><br /><br /><p><strong><br />    <br />[assembly: System.Runtime.CompilerServices.InternalsVisibleTo(&quot;System.Windows&quot;)]</strong></p><br /><br /><p>&#160;</p><br /><br /><p>I’m not going to say whether this is or is not a good idea, and I’m sure there’s many ways to abuse it.</p><br /><br /><p>Don’t inhale too much of this stuff.</p>  </div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Jason.Jarrett</div>
<div class='content'>
W.Meints<br /><br />I&#39;m not sure I understand your question. Could you elaborate a little?</div>
</div>
<div class='comment'>
<div class='author'>W.Meints</div>
<div class='content'>
What about dynamics, does the same trick apply to those kind of objects as well?</div>
</div>
<div class='comment'>
<div class='author'>Obsidience</div>
<div class='content'>
I prefer to keep my privates unexposed, thank you very much! ;)</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[StatLight – Goes Open Source]]></title>
    <link href="http://staxmanade.com/2009/12/statlight-goes-open-source/"/>
    <updated>2009-12-10T19:27:00-08:00</updated>
    <id>http://staxmanade.com/2009/12/statlight-goes-open-source</id>
    <content type="html"><![CDATA[<div class='post'>
<p>Although I made a very minor attempt at making <a href="http://statlight.net" target="_blank">StatLight</a> a “for-sale” product, I knew when I started that open-source was most likely going to be my long term path for <a href="http://statlight.net" target="_blank">StatLight</a>.</p>  <h5>What is it? (Silverlight Testing Automation Tool)</h5>  <p>StatLight is a tool developed for automating the setup, running, and gathering results of Silverlight unit tests. StatLight helps to speed up the feedback cycles while practicing<a href="http://en.wikipedia.org/wiki/Test-driven_development"> TDD</a>/<a href="http://en.wikipedia.org/wiki/Behavior_Driven_Development">BDD</a>/(insert your test style here) during Silverlight development.</p>  <h5>Where can I get StatLight?</h5>  <p><a href="http://StatLight.CodePlex.com">http://StatLight.CodePlex.com</a></p>  <p>&#160;</p>  <h4>Happy Coding !!!</h4>  </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[StatLight (Silverlight Test Automation Tool) V0.8 Released]]></title>
    <link href="http://staxmanade.com/2009/10/statlight-silverlight-test-automation/"/>
    <updated>2009-10-07T05:30:00-07:00</updated>
    <id>http://staxmanade.com/2009/10/statlight-silverlight-test-automation</id>
    <content type="html"><![CDATA[<div class='post'>
<p><a href="http://www.statlight.net"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://lh3.ggpht.com/_L6Vw0x_R3iw/SsyYPDL-d7I/AAAAAAAAAME/hSwnRB1lDcw/image%5B6%5D.png?imgmax=800" width="244" height="79" /></a> </p>  <h4>A new version of the StatLight tool has been released.</h4>  <h4>Download: <a href="http://www.statlight.net">http://www.statlight.net</a></h4>  <h3>Major Feature Updates:</h3>  <ul>   <li>Support for 64bit </li>    <li>Back support for previous Microsoft.Testing.Silverlight assemblies      <ul>       <li>By giving the tool a specific -v=[December2008 | March2009 | July2009], StatLight can now run the asynchronous tests supported by the Microsoft Testing library. </li>     </ul>   </li>    <li>Xml report output.      <ul>       <li>By giving the tool the -r=&lt;FilePath.xml&gt;. StatLight will write out an xml report of the test run. </li>     </ul>   </li>    <li>Update to the Silverlight 3.0 Runtime – Should be compatible with Silverlight 2.0 assemblies. </li> </ul>  <h4>Minor Updates: </h4>  <ul>   <li>Support for auto-closing modal Silverlight MessageBox dialogs. </li>    <li>Update feedback to the end user for when access to run statlight web service is not allowed (Added better feedback on how to get it up and running). </li>    <li>Added a timeout monitor to detect when the StatLight browser has not communicated with the StatLight server within a reasonable amount of time. StatLight will stop running if communication (a test message) has not arrived within 5 minutes. (Will look into making this configurable) </li> </ul>  <h5>Also to note:</h5>  <ul>   <li>I’ve setup a user voice account where you can suggest or vote on future features.      <br /><a title="http://statlight.uservoice.com" href="http://statlight.uservoice.com">http://statlight.uservoice.com</a> </li> </ul>  </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Silverlight Unity & Moq Backed AutoMocker]]></title>
    <link href="http://staxmanade.com/2009/06/silverlight-unity-moq-backed-automocker/"/>
    <updated>2009-06-19T08:06:00-07:00</updated>
    <id>http://staxmanade.com/2009/06/silverlight-unity-moq-backed-automocker</id>
    <content type="html"><![CDATA[<div class='post'>
<p>I’ve pushed the <a href="http://code.google.com/p/moq-contrib/source/detail?r=22">Silverlight Unity/Moq AutoMocker</a> into the <a href="http://code.google.com/p/moq-contrib/">moq-contrib</a> project.</p>  <p>Well the other day I need the automocker and ended up running into a bug that was in my old-old-old pre-release version of <a href="http://code.google.com/p/moq-contrib/">moq for Silverlight</a>, so I took the time to get the released version and re-compile the automocker.</p>  <p>I published it to the <a href="http://code.google.com/p/moq-contrib/">moq-contrib</a> project. Haven’t taken the time to create a binary release, but should be able to get latest build, execute the build.Silverlight.cmd and in the drops\Current-Silverlight should be Moq.Contrib.UnityAutoMocker.Silverlight.dll</p>  <p>Enjoy!</p>  </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[StatLight – V0.5 Released!]]></title>
    <link href="http://staxmanade.com/2009/05/statlight-v05-released/"/>
    <updated>2009-05-11T22:28:00-07:00</updated>
    <id>http://staxmanade.com/2009/05/statlight-v05-released</id>
    <content type="html"><![CDATA[<div class='post'>
<p>A new version of <a href="http://statlight.net/" target="_blank">StatLight</a> has been released!</p>  <h4>Major Features Added:</h4>  <ul>   <li>NUnit support      <ul>       <li>Will work with any version of NUnit compiled to run under <a href="http://silverlight.com/" target="_blank">silverlight</a>.           <ul>           <li>EX: <a href="http://www.jeff.wilcox.name/2009/01/nunit-and-silverlight/" target="_blank">Jeff Wilcox’s</a> port </li>         </ul>       </li>     </ul>   </li>    <li>Further MSTest support </li>    <ul>     <li>In the previous version (0.4) you could only use <a href="http://statlight.net/" target="_blank">StatLight</a> with the <a href="http://silverlight.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=20430" target="_blank">March 2009</a> build of Microsoft.Silverlight.Testing.dll. <strong>It will now work with any version.</strong>         <br />(<strong>Update</strong>: the Silverlight Asynchronous testing style is not currently supported)</li>   </ul> </ul>  <h4>Minor Tweaks:</h4>  <ul>   <li>The debug.assertion creates a failure test event      <ul>       <li>It used to write a message to the console. It will now create a failure event, similar to a test that fails. </li>     </ul>   </li>    <li>Support for [Ignore]’d tests for each supported framework (MSTest, NUnit, Xunit) </li> </ul>  <h5>Soon to come:</h5>  <ul>   <li>Xml report file export </li>    <li>Basic <a href="http://confluence.public.thoughtworks.org/display/CCNET/Welcome+to+CruiseControl.NET" target="_blank">Cruise Control .net</a> support </li> </ul>  </div>

]]></content>
  </entry>
  
</feed>
